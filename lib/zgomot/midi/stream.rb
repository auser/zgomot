##############################################################################################################
module Zgomot::Midi

  #####-------------------------------------------------------------------------------------------------------
  class Stream

    #.........................................................................................................
    @streams = []

    #####-------------------------------------------------------------------------------------------------------
    class << self
      
      #.........................................................................................................
      attr_reader :streams

      #.........................................................................................................
      def str(name, opts={}, &blk)
        strm = new()
        opts[:infinite] = true if blk.arity > 0 
        if opts[:infinite]
        else
          strm.define_meta_class_method(:play, &blk) 
p strm          
p n(:C)          
p strm.play            
        end           
        @streams << strm
      end

      #.........................................................................................................
      def play  
        streams.each{|s| p s; s.play_channels}
      end
      
    #### self
    end
    
    #####-------------------------------------------------------------------------------------------------------
    attr_reader :channels
    
    #.........................................................................................................
    def intitialize()
    end

    #.........................................................................................................
    def play_channels      
p play      
      if (ch = play).kind_of?(Channel)
        p ch
      end
    end

  #### Stream
  end

#### Zgomot::Midi 
end
