= zgomot

zgomot is a DSL for composing MIDI music compositions. It does not do synthesis so requires digital audio software such as Apple's Garage Band, Logic or Abelton Live to create sound. An program that plays a simple tune only requires a few lines of code.

    # mytune.rb
    require 'rubygems'
    require 'zgomot'

    # define a tune pattern with 5 notes and a rest
    tune = [n([:C,5]), n(:B), n(:R), n(:G), n(:C,:l=>2), n([:E,5],:l=>2)]

    # define a MIDI stream which plays the pattern 3 times
    str 'notes', tune, :lim=>3 do |pattern|
        ch << pattern
    end

    # write the MIDI stream
    play

Now, specify beats per minute, time signature and resolution in <tt>zgomot.yml</tt>. 

    time_signature: 4/4
    beats_per_minute: 120
    resolution: 1/64
    
Install the gem,

    sudo gem install zgomot

Run the program to play the tune,

    ruby mytune.rb
    
== OS X MIDI Device Driver

For OS X the IAC Driver must be enabled for programs to communicate with the digital audio software used to render the MIDI generated by programs. To enable the IAC Driver open <em>Audio MIDI Setup</em>. Under the <em>Window</em> menu item select <em>Show MIDI Window</em>. Find the <em>IAC Driver</em>, double click it and be sure <em>Device is online</em> is selected.
    
== Configuration

Three parameters are defined in the configuration, <tt>zgomot.yml</tt>, file that specify the timing of a composition.

* <b>time_signature</b>: Beats per measure.
* <b>beats_per_minute</b>: To map to real time the beats per minute are specified.
* <b>resolution</b>: Defines the length of a clock tick and is defined by the duration of the shortest note that can be played. In the first example this is a 64'th note. The maximum resolution is 1/1024 if your computer can do it.

== Pitch

Pitch is defined by a 2 dimensional array specifying the pitch class and octave, For example [:C, 4] would denote the note C at octave 4. Octave is an integer between -1 and 9 and acceptable values for pitch class with enharmonics, where <em>s</em> denotes a sharp and <em>b</em> a flat, and rest by :R are,

    :C,  :Bs; 
    :Cs, :Db
    :D
    :Ds, :Ed
    :E,  :Fd
    :F,  :Es
    :Fs, :Gb
    :G, 
    :Gs,  :Ab
    :A,
    :As, :Bb,
    :B, :Cb, 
    :R, 

== Notes

A note is defined by,

    n(pitch, opts)
    
Acceptable options are,

* <b>l</b>: Reciprocal length of note, Accepted values are 1, 2, 4,..., max. Where max is the inverse resolution defined in <tt>zgomot.yml</tt>. Mapping to standard durations gives; 1 a whole note, 2 a half note, 4 a quarter note, 8 and eighth note, ... The default value is 4, a quarter note.
* <b>v</b>: The velocity of the note is a number between 0 ad 1 defining its loudness. Low values correspond to piano and larger values forte. The default is 0.6.
          
An F sharp half note at octave 5 with velocity 0.5 would be defined by,

          n([:Fs, 5], :l => 2, :v => 0.5)
          
== Chords

== Percussion

== Chord Progressions

== Note Progressions

== Patterns

== MIDI Channels

== MIDI Streams

== Write to MIDI Device

== Markov Matrix

== Callbacks

== Logging

== Examples

Many examples can be found at https://github.com/troystribling/zgomot/tree/master/examples/.

== Copyright

Copyright (c) 2009 Troy Stribling. See LICENSE for details.
